@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@using Umbraco.Cms.Core.Models.PublishedContent;
@{
    var site = Model.Root().Children().First();
}
 <section id="feature-section">
               <div class="featured-products-section">
                    <div class="featured-section-title">
                         <h3>@site.Value("featuredTitle")</h3>
                    </div>
                    <div class="featured-products-container">
                         <!-- Looping through the entire list of products and seperate them based on category.
                              Makes it smoother and I don't have to repeat myself in this case. I go with DRY this time instead.
                              With this "<component>" I can assign  the correct component by passing the category
                              to the ":is" prop. Then I don't need a "v-if" action to check which component to load.
                              Also SRP, the correspondend component has only one task, to present it's product type.
                              eg. "ShoeCardComponent" has the responsibility to present the shoes, and therefore has other properties to show,
                              and the product that comes in to ShoeCardComponent is defined as IShoe.
                             
                         -->
            @{
                var selection = Umbraco.Content(Guid.Parse("8ca7b2b4-33fe-4b22-ab36-5378a9ab6ad7"))
                .Children()
                .Where(x => x.IsVisible());

                if (selection != null)
                {   
                    foreach(var item in selection)
                    {
                        if (item.Value("isFeatured").ToString() == "True")
                        {
                   

                        <div
                              class="feature-cards-contianer"

                         >
                            <!-- START OF SHOE CARD COMPONENT -->
                            <div
                                   class="featured-products-card"

                              >
                                @{
                                    IPublishedContent productImage = item.Value<IPublishedContent>("productThumbnail");
                                }


                                <div class="card-image">

                                    <img src="@productImage.Url()" alt="" />
                                   

                                    <div
                                             class="card-button-container"
                                        >
                                        <div class="button-container-qv">
                                          <div
                                               class="left-bottom-border-qv"
                                          ></div>
                                          <div
                                               class="left-top-border-qv"
                                          ></div>
                                          <div
                                               class="right-bottom-border-qv"
                                          ></div>
                                          <div
                                               class="right-top-border-qv"
                                
                                          ></div>
                                          <div class="button-text">Snabbtitt</div>
                                    </div>
                                    </div>
                                    <div class="card-content-background">
                                        <h3>@item.Value("productCategory")</h3>

                                        <h1>@item.Value("productName")</h1>
                                        <!--<div class="card-ratings">
                                        <div
                                        class="card-ratings-container"
                                        v-for="number in item.rating"
                                        :key="number"
                                        >
                                        <Icon
                                        icon="material-symbols:star"
                                        class="card-ratings-icon"
                                        />
                                        </div> 
                                        </div> -->
                                        <div
                                                  class="card-price"
                                             >
                                            $@item.Value("productPrice")
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- END OF SHE CARD COMPONENT -->
                        </div>

                        }
                    }
                }
                         }
                    </div>
               </div>
          </section>